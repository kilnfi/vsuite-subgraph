type vFactory @entity {
  id: Bytes!
  address: Bytes!
  version: BigInt!
  withdrawalChannels: [WithdrawalChannel!]! @derivedFrom(field: "factory")
  depositors: [FactoryDepositor!]! @derivedFrom(field: "factory")
  
  operator: Bytes
  admin: Bytes

  hatcherRegistry: Bytes
  minimalRecipientImplementation: Bytes
  treasury: vTreasury

  operatorName: String!
  operatorUrl: String!
  operatorIconUrl: String!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vTreasury @entity {
  id: Bytes!
  address: Bytes!
  factory: vFactory!
}

type FactoryDepositor @entity {
  id: String! 
  factory: vFactory!
  address: Bytes!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ValidatorRequest @entity {
  id: String!
  withdrawalChannel: WithdrawalChannel!
  requestedTotal: BigInt!
  totalOnRequest: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type WithdrawalChannel @entity {
  id: String!
  factory: vFactory!
  withdrawalChannel: Bytes!
  lastValidatorRequest: ValidatorRequest

  total: BigInt!
  funded: BigInt!
  limit: BigInt!

  keys: [ValidationKey!]! @derivedFrom(field: "withdrawalChannel")

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ValidationKey @entity {
  id: String!
  publicKey: Bytes!
  signature: Bytes!
  withdrawalChannel: WithdrawalChannel!
  index: BigInt!
  funded: FundedValidationKey

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ExitRequest @entity {
  id: String!
  validator: FundedValidationKey!
  emitter: Bytes!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type FundedValidationKey @entity {
  id: String!
  validatorId: BigInt!
  validationKey: ValidationKey!
  owner: Bytes
  feeRecipient: Bytes
  lastExitRequest: ExitRequest

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}
