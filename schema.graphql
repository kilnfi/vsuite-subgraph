type MetaContract @entity {
  id: String!
  abi: String!
}

#                                                                  
# ██   ██  █████  ████████  ██████ ██   ██ ███████ ██████  ███████ 
# ██   ██ ██   ██    ██    ██      ██   ██ ██      ██   ██ ██      
# ███████ ███████    ██    ██      ███████ █████   ██████  ███████ 
# ██   ██ ██   ██    ██    ██      ██   ██ ██      ██   ██      ██ 
# ██   ██ ██   ██    ██     ██████ ██   ██ ███████ ██   ██ ███████ 
# 

type PluggableHatcher @entity {
  id: Bytes!
  address: Bytes!
  contract: MetaContract!

  admin: Bytes!
  pauser: Bytes!
  cubCount: BigInt!
  upgradeCount: BigInt!
  globalPaused: Boolean!
  hatcherRegistry: Nexus
  initialProgress: BigInt!
  globalFixesCount: BigInt!

  cubs: [Cub!]! @derivedFrom(field: "hatcher")
  globalFixes: [Fix!]! @derivedFrom(field: "globalFix")
  currentImplementation: PluggableHatcherImplementation
  implementations: [PluggableHatcherImplementation!]! @derivedFrom(field: "pluggableHatcher")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type Cub @entity {
  id: Bytes!
  address: Bytes!
  contract: MetaContract!

  paused: Boolean!
  progress: BigInt!
  constructionData: Bytes!

  hatcher: PluggableHatcher!
  appliedFixes: [Fix!]! @derivedFrom(field: "fix")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type Fix @entity {
  id: String!
  address: Bytes!

  index: BigInt
  deleted: Boolean

  fix: Cub
  globalFix: PluggableHatcher
  
  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PluggableHatcherImplementation @entity {
  id: String!
  address: Bytes!

  pluggableHatcher: PluggableHatcher!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

# 
# ███    ██ ███████ ██   ██ ██    ██ ███████ 
# ████   ██ ██       ██ ██  ██    ██ ██      
# ██ ██  ██ █████     ███   ██    ██ ███████ 
# ██  ██ ██ ██       ██ ██  ██    ██      ██ 
# ██   ████ ███████ ██   ██  ██████  ███████ 
#                                            

type Nexus @entity {
  id: Bytes!
  address: Bytes!
  contract: MetaContract!

  admin: Bytes!
  globalOracle: Bytes!
  globalRecipient: Bytes!
  depositContract: Bytes!
  minimalRecipientImplementation: Bytes!
  genesisTimestamp: BigInt!
  epochsUntilFinal: BigInt!
  slotsPerEpoch: BigInt!
  secondsPerSlot: BigInt!

  factoryHatcher: PluggableHatcher
  treasuryHatcher: PluggableHatcher
  poolHatcher: PluggableHatcher
  withdrawalRecipientHatcher: PluggableHatcher
  execLayerRecipientHatcher: PluggableHatcher
  coverageRecipientHatcher: PluggableHatcher
  oracleAggregatorHatcher: PluggableHatcher
  factories: [vFactory!]! @derivedFrom(field: "nexus")
  hatchers: [PluggableHatcher!]! @derivedFrom(field: "hatcherRegistry")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

# 
# ███████  █████   ██████ ████████  ██████  ██████  ██    ██ 
# ██      ██   ██ ██         ██    ██    ██ ██   ██  ██  ██  
# █████   ███████ ██         ██    ██    ██ ██████    ████   
# ██      ██   ██ ██         ██    ██    ██ ██   ██    ██    
# ██      ██   ██  ██████    ██     ██████  ██   ██    ██    
#                                                            

type vFactory @entity {
  id: Bytes!
  address: Bytes!
  contract: MetaContract!

  version: BigInt!
  operator: Bytes
  admin: Bytes
  minimalRecipientImplementation: Bytes
  operatorName: String!
  operatorUrl: String!
  operatorIconUrl: String!

  cub: Cub!
  withdrawalChannels: [WithdrawalChannel!]! @derivedFrom(field: "factory")
  depositors: [FactoryDepositor!]! @derivedFrom(field: "factory")
  pools: [vPool!]! @derivedFrom(field: "factory")
  nexus: Nexus
  treasury: vTreasury

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type WithdrawalChannel @entity {
  id: String!

  withdrawalChannel: Bytes!
  total: BigInt!
  funded: BigInt!
  limit: BigInt!

  keys: [ValidationKey!]! @derivedFrom(field: "withdrawalChannel")
  factory: vFactory!
  lastValidatorRequest: ValidatorRequest

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ValidatorRequest @entity {
  id: String!

  requestedTotal: BigInt!
  totalOnRequest: BigInt!

  withdrawalChannel: WithdrawalChannel!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type CommonValidationKeyEntry @entity {
  id: Bytes!

  publicKey: Bytes!

  validationKeyCount: BigInt!
  validationKeys: [ValidationKey!]! @derivedFrom(field: "commonValidationKeyEntry")

  depositEventCount: BigInt!
  depositEvents: [DepositEvent!]! @derivedFrom(field: "commonValidationKeyEntry")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ValidationKey @entity {
  id: String!

  publicKey: Bytes!
  signature: Bytes!
  index: BigInt!

  validSignature: Boolean!
  validationError: String

  commonValidationKeyEntry: CommonValidationKeyEntry!

  funded: FundedValidationKey
  withdrawalChannel: WithdrawalChannel!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type FundedValidationKey @entity {
  id: String!

  validatorId: BigInt!
  depositEvent: DepositEvent!
  owner: Bytes
  depositor: FactoryDepositor!
  withdrawalAddress: Bytes
  feeRecipient: Bytes
  extraData: String

  lastExitRequest: ExitRequest
  validationKey: ValidationKey!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ExitRequest @entity {
  id: String!

  emitter: Bytes!

  validator: FundedValidationKey!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type FactoryDepositor @entity {
  id: String! 
  address: Bytes!

  factory: vFactory!
  fundedValidationKeys: [FundedValidationKey!]! @derivedFrom(field: "depositor")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

# 
# ████████ ██████  ███████  █████  ███████ ██    ██ ██████  ██    ██ 
#    ██    ██   ██ ██      ██   ██ ██      ██    ██ ██   ██  ██  ██  
#    ██    ██████  █████   ███████ ███████ ██    ██ ██████    ████   
#    ██    ██   ██ ██      ██   ██      ██ ██    ██ ██   ██    ██    
#    ██    ██   ██ ███████ ██   ██ ███████  ██████  ██   ██    ██    
#                                                                    

type vTreasury @entity {
  id: Bytes!
  address: Bytes!

  cub: Cub!
  factory: vFactory!
  operator: Bytes!
  fee: BigInt!

  feeVotes: [TreasuryFeeVote!]! @derivedFrom(field: "treasury")
  autoCover: [AutoCover!]! @derivedFrom(field: "treasury")
  withdrawals: [TreasuryWithdrawal!]! @derivedFrom(field: "treasury")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type TreasuryWithdrawal @entity {
  id: String!
  treasury: vTreasury!

  operator: Bytes!
  globalRecipient: Bytes!
  revenue: BigInt!
  commission: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type AutoCover @entity {
  id: String!
  treasury: vTreasury!

  autoCoverBps: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type TreasuryFeeVote @entity {
  id: String!
  treasury: vTreasury!

  voter: Bytes!
  operatorFeeVote: BigInt!
  globalRecipientFeeVote: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

# 
# ██████   ██████   ██████  ██      
# ██   ██ ██    ██ ██    ██ ██      
# ██████  ██    ██ ██    ██ ██      
# ██      ██    ██ ██    ██ ██      
# ██       ██████   ██████  ███████ 
#                                   

type vPool @entity {
  id: Bytes!
  address: Bytes!
  contract: MetaContract!

  deposited: BigInt!
  committed: BigInt!
  purchasedValidatorCount: BigInt!
  requestedExits: BigInt!
  totalSupply: BigInt!
  totalUnderlyingSupply: BigInt!
  operatorFee: BigInt!
  epochsPerFrame: BigInt!
  maxAPRUpperBound: BigInt!
  maxAPRUpperCoverageBoost: BigInt!
  maxRelativeLowerBound: BigInt!
  lastEpoch: BigInt!
  expectedEpoch: BigInt!

  cub: Cub!
  factory: vFactory!
  nexus: Nexus!
  depositors: [PoolDepositor!]! @derivedFrom(field: "pool")
  balances: [PoolBalance!]! @derivedFrom(field: "pool")
  deposits: [PoolDeposit!]! @derivedFrom(field: "pool")
  purchasedValidators: [PoolPurchasedValidator!]! @derivedFrom(field: "pool")
  reports: [Report!]! @derivedFrom(field: "pool")
  oracleAggregator: vOracleAggregator!
  coverageRecipient: vCoverageRecipient!
  execLayerRecipient: vExecLayerRecipient!
  withdrawalRecipient: vWithdrawalRecipient!
  exitQueue: vExitQueue!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PoolDeposit @entity {
  id: String!
  pool: vPool!

  from: Bytes!
  amount: BigInt!
  mintedShares: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PoolBalanceApproval @entity {
  id: String!
  address: Bytes!

  amount: BigInt!

  balance: PoolBalance!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PoolBalance @entity {
  id: String!
  address: Bytes!

  amount: BigInt!
  totalApproval: BigInt!

  pool: vPool!
  approvals: [PoolBalanceApproval!]! @derivedFrom(field: "balance")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PoolPurchasedValidator @entity {
  id: String!

  index: BigInt!

  pool: vPool!
  fundedValidationKey: FundedValidationKey!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type Report @entity {
  id: String!

  epoch: BigInt!
  balanceSum: BigInt!
  exitedSum: BigInt!
  skimmedSum: BigInt!
  slashedSum: BigInt!
  exiting: BigInt!
  maxExitable: BigInt!
  maxCommittable: BigInt!
  activatedCount: BigInt!
  stoppedCount: BigInt!

  preUnderlyingSupply: BigInt!
  postUnderlyingSupply: BigInt!
  preSupply: BigInt!
  postSupply: BigInt!
  newExitedEthers: BigInt!
  newSkimmedEthers: BigInt!
  exitBoostEthers: BigInt!
  exitFedEthers: BigInt!
  exitBurnedShares: BigInt!
  revenue: BigInt!
  delta: BigInt!
  increaseLimit: BigInt!
  coverageIncreaseLimit: BigInt!
  decreaseLimit: BigInt!
  consensusLayerDelta: BigInt!
  pulledCoverageFunds: BigInt!
  pulledExecutionLayerRewards: BigInt!
  pulledExitQueueUnclaimedFunds: BigInt!

  pool: vPool!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PoolDepositor @entity {
  id: String! 
  address: Bytes!

  pool: vPool!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

# 
# ███████ ██   ██ ██ ████████      ██████  ██    ██ ███████ ██    ██ ███████ 
# ██       ██ ██  ██    ██        ██    ██ ██    ██ ██      ██    ██ ██      
# █████     ███   ██    ██        ██    ██ ██    ██ █████   ██    ██ █████   
# ██       ██ ██  ██    ██        ██ ▄▄ ██ ██    ██ ██      ██    ██ ██      
# ███████ ██   ██ ██    ██         ██████   ██████  ███████  ██████  ███████ 
#                                     ▀▀                                     

type vExitQueue @entity {
  id: Bytes!
  address: Bytes!
  contract: MetaContract!

  pool: vPool!
  tickets: [Ticket!]! @derivedFrom(field: "exitQueue")
  ticketCount: BigInt!
  casks: [Cask!]! @derivedFrom(field: "exitQueue")
  caskCount: BigInt!
  payments: [Payment!]! @derivedFrom(field: "exitQueue")
  unclaimedFunds: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type Payment @entity {
  id: String!

  exitQueue: vExitQueue!

  amount: BigInt!
  recipient: Bytes!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type FillTrace @entity {
  id: String!

  ticket: Ticket!
  cask: Cask!

  amount: BigInt!
  amountEth: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type Ticket @entity {
  id: String!

  exitQueue: vExitQueue!

  ticketId: BigInt!

  owner: Bytes!
  size: BigInt!
  position: BigInt!
  maxExitable: BigInt!
  exited: BigInt!
  exitedEth: BigInt!

  fillTraces: [FillTrace!]! @derivedFrom(field: "ticket")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type Cask @entity {
  id: String!

  exitQueue: vExitQueue!

  caskId: BigInt!

  size: BigInt!
  position: BigInt!
  value: BigInt!
  provided: BigInt!
  providedEth: BigInt!
  unclaimedEth: BigInt!

  fillTraces: [FillTrace!]! @derivedFrom(field: "cask")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}


# 
# ███████ ██   ██ ███████  ██████     ██       █████  ██    ██ ███████ ██████      ██████  ███████  ██████ ██ ██████  ██ ███████ ███    ██ ████████ 
# ██       ██ ██  ██      ██          ██      ██   ██  ██  ██  ██      ██   ██     ██   ██ ██      ██      ██ ██   ██ ██ ██      ████   ██    ██    
# █████     ███   █████   ██          ██      ███████   ████   █████   ██████      ██████  █████   ██      ██ ██████  ██ █████   ██ ██  ██    ██    
# ██       ██ ██  ██      ██          ██      ██   ██    ██    ██      ██   ██     ██   ██ ██      ██      ██ ██      ██ ██      ██  ██ ██    ██    
# ███████ ██   ██ ███████  ██████     ███████ ██   ██    ██    ███████ ██   ██     ██   ██ ███████  ██████ ██ ██      ██ ███████ ██   ████    ██    
#                                                                                                                                                   

type vExecLayerRecipient @entity {
  id: Bytes!
  address: Bytes!
  contract: MetaContract!

  totalSuppliedEther: BigInt!

  suppliedEther: [ExecLayerSuppliedEther!]! @derivedFrom(field: "execLayerRecipient")
  cub: Cub!
  pool: vPool!
  
  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ExecLayerSuppliedEther @entity {
  id: String!

  amount: BigInt!
  execLayerRecipient: vExecLayerRecipient!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

# 
#  ██████  ██████  ██    ██ ███████ ██████   █████   ██████  ███████     ██████  ███████  ██████ ██ ██████  ██ ███████ ███    ██ ████████ 
# ██      ██    ██ ██    ██ ██      ██   ██ ██   ██ ██       ██          ██   ██ ██      ██      ██ ██   ██ ██ ██      ████   ██    ██    
# ██      ██    ██ ██    ██ █████   ██████  ███████ ██   ███ █████       ██████  █████   ██      ██ ██████  ██ █████   ██ ██  ██    ██    
# ██      ██    ██  ██  ██  ██      ██   ██ ██   ██ ██    ██ ██          ██   ██ ██      ██      ██ ██      ██ ██      ██  ██ ██    ██    
#  ██████  ██████    ████   ███████ ██   ██ ██   ██  ██████  ███████     ██   ██ ███████  ██████ ██ ██      ██ ███████ ██   ████    ██    
#                                                                                                                                         

type vCoverageRecipient @entity {
  id: Bytes!
  address: Bytes!
  contract: MetaContract!

  totalAvailableEther: BigInt!
  totalSuppliedEther: BigInt!
  totalAvailableShares: BigInt!
  totalVoidedShares: BigInt!

  cub: Cub!
  pool: vPool!
  suppliedEther: [CoverageSuppliedEther!]! @derivedFrom(field: "coverageRecipient")
  voidedShares: [CoverageVoidedShares!]! @derivedFrom(field: "coverageRecipient")
  donors: [CoverageDonor!]! @derivedFrom(field: "coverageRecipient")
  
  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type CoverageDonor @entity {
  id: String! 
  address: Bytes!

  coverageRecipient: vCoverageRecipient!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type CoverageSuppliedEther @entity {
  id: String!

  amount: BigInt!

  coverageRecipient: vCoverageRecipient!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type CoverageVoidedShares @entity {
  id: String!

  amount: BigInt!

  coverageRecipient: vCoverageRecipient!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}


# 
# ██     ██ ██ ████████ ██   ██ ██████  ██████   █████  ██     ██  █████  ██          ██████  ███████  ██████ ██ ██████  ██ ███████ ███    ██ ████████ 
# ██     ██ ██    ██    ██   ██ ██   ██ ██   ██ ██   ██ ██     ██ ██   ██ ██          ██   ██ ██      ██      ██ ██   ██ ██ ██      ████   ██    ██    
# ██  █  ██ ██    ██    ███████ ██   ██ ██████  ███████ ██  █  ██ ███████ ██          ██████  █████   ██      ██ ██████  ██ █████   ██ ██  ██    ██    
# ██ ███ ██ ██    ██    ██   ██ ██   ██ ██   ██ ██   ██ ██ ███ ██ ██   ██ ██          ██   ██ ██      ██      ██ ██      ██ ██      ██  ██ ██    ██    
#  ███ ███  ██    ██    ██   ██ ██████  ██   ██ ██   ██  ███ ███  ██   ██ ███████     ██   ██ ███████  ██████ ██ ██      ██ ███████ ██   ████    ██    
#                                                                                                                                                      

type vWithdrawalRecipient @entity {
  id: Bytes!
  address: Bytes!

  withdrawalCredentials: Bytes!

  cub: Cub!
  pool: vPool!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

# 
#  ██████  ██████   █████   ██████ ██      ███████      █████   ██████   ██████  ██████  ███████  ██████   █████  ████████  ██████  ██████  
# ██    ██ ██   ██ ██   ██ ██      ██      ██          ██   ██ ██       ██       ██   ██ ██      ██       ██   ██    ██    ██    ██ ██   ██ 
# ██    ██ ██████  ███████ ██      ██      █████       ███████ ██   ███ ██   ███ ██████  █████   ██   ███ ███████    ██    ██    ██ ██████  
# ██    ██ ██   ██ ██   ██ ██      ██      ██          ██   ██ ██    ██ ██    ██ ██   ██ ██      ██    ██ ██   ██    ██    ██    ██ ██   ██ 
#  ██████  ██   ██ ██   ██  ██████ ███████ ███████     ██   ██  ██████   ██████  ██   ██ ███████  ██████  ██   ██    ██     ██████  ██   ██ 
#                                                                                                                                           

type vOracleAggregator @entity {
  id: Bytes!
  address: Bytes!
  contract: MetaContract!

  memberCount: BigInt!
  quorum: BigInt!
  highestReportedEpoch: BigInt!

  cub: Cub!
  pool: vPool!
  members: [OracleAggregatorMember!]! @derivedFrom(field: "oracleAggregator")
  lastVariant: OracleAggregatorReportVariant
  variants: [OracleAggregatorReportVariant!]! @derivedFrom(field: "oracleAggregator")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type OracleAggregatorMember @entity {
  id: String!
  address: Bytes!

  index: BigInt!

  oracleAggregator: vOracleAggregator!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type OracleAggregatorReportVariant @entity {
  id: String!

  voteCount: BigInt!
  submitted: Boolean!
  period: BigInt!

  balanceSum: BigInt!
  exitedSum: BigInt!
  skimmedSum: BigInt!
  slashedSum: BigInt!
  exiting: BigInt!
  maxExitable: BigInt!
  maxCommittable: BigInt!
  epoch: BigInt!
  activatedCount: BigInt!
  stoppedCount: BigInt!


  oracleAggregator: vOracleAggregator!
  votes: [OracleAggregatorReportVariantVote!]! @derivedFrom(field: "variant")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type OracleAggregatorReportVariantVote @entity {
  id: String!

  member: Bytes!
  globalMember: Boolean!

  variant: OracleAggregatorReportVariant!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}


#
# ██ ███    ██ ████████ ███████  ██████  ██████   █████  ████████ ██  ██████  ███    ██ ███████ 
# ██ ████   ██    ██    ██      ██       ██   ██ ██   ██    ██    ██ ██    ██ ████   ██ ██      
# ██ ██ ██  ██    ██    █████   ██   ███ ██████  ███████    ██    ██ ██    ██ ██ ██  ██ ███████ 
# ██ ██  ██ ██    ██    ██      ██    ██ ██   ██ ██   ██    ██    ██ ██    ██ ██  ██ ██      ██ 
# ██ ██   ████    ██    ███████  ██████  ██   ██ ██   ██    ██    ██  ██████  ██   ████ ███████
#


type IntegrationChannel @entity {
  id: Bytes!
  name: String!
  implementation: Bytes!
  contract: MetaContract!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vStake @entity {
  id: Bytes!
  vPool: vPool!

  address: Bytes!
  channel: IntegrationChannel!
  name: String!
  symbol: String!
  decimals: BigInt!

  integratorFee: BigInt!
  totalSupply: BigInt!
  totalUnderlyingSupply: BigInt!

  operatorCommissions: [OperatorCommission!]! @derivedFrom(field: "vStake")
  deposits: [vStakesDeposit!]! @derivedFrom(field: "vStake")
  balances: [vStakesBalance!]! @derivedFrom(field: "vStake")

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type OperatorCommission @entity {
  id: String! # "{vStakesAddress}@{operatorAddres}"
  vStake: vStake!

  recipient: Bytes!
  commission: BigInt!
  withdrawnCommission: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vStakesDeposit @entity {
  id: String! # "{vStakesAddress}@{stakerAddress}@{txHash}"
  vStake: vStake!
  
  hash: Bytes!
  
  staker: Bytes!
  depositAmount: BigInt!
  mintedShares: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vStakesBalance @entity {
  id: String! # "{vStakesAddress}@{stakerAddress}"
  vStake: vStake!
    
  staker: Bytes!
  underlyingBalance: BigInt!
  sharesBalance: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ExternalDepositLink @entity {
  id: String!

  validationKey: ValidationKey!
  depositEvent: DepositEvent!
}

type DepositEvent @entity {
  id: String!

  pubkey: Bytes!
  withdrawalCredentials: Bytes!
  amount: BigInt!
  signature: Bytes!
  index: BigInt!

  amountRaw: Bytes!
  indexRaw: Bytes!

  validatorDepositIndex: BigInt!

  validationKeyActivation: [FundedValidationKey!]! @derivedFrom(field: "depositEvent")
  commonValidationKeyEntry: CommonValidationKeyEntry!

  tx: Bytes!
  logIndex: BigInt!

  validSignature: Boolean
  validationError: String
  verified: Boolean!

  createdAt: BigInt!
  editedAt: BigInt!
  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type G @entity {
  id: String!

  systemLogIndex: BigInt!
}

interface SystemEvent {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type AddedValidationKeysSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  count: BigInt!
  newTotal: BigInt!
  withdrawalChannel: WithdrawalChannel!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type RemovedValidationKeysSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  count: BigInt!
  newTotal: BigInt!
  withdrawalChannel: WithdrawalChannel!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type FundedValidationKeySystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  depositor: FactoryDepositor!
  count: BigInt!
  newTotal: BigInt!
  withdrawalChannel: WithdrawalChannel!
  fundedValidationKeys: [FundedValidationKey!]!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type UpdatedLimitSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  oldLimit: BigInt
  newLimit: BigInt!
  withdrawalChannel: WithdrawalChannel!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ValidatorOwnerChangedSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  validator: FundedValidationKey!
  oldOwner: Bytes!
  newOwner: Bytes!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ValidatorFeeRecipientChangedSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  validator: FundedValidationKey!
  oldFeeRecipient: Bytes!
  newFeeRecipient: Bytes!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ValidatorExtraDataChangedSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  validator: FundedValidationKey!
  oldExtraData: String!
  newExtraData: String!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type DuplicateKeySystemAlert implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  key: CommonValidationKeyEntry!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ExternalFundingSystemAlert implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  key: CommonValidationKeyEntry!
  logIndex: BigInt

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ChangedFactoryParameterSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  parameter: String!
  newValue: String!
  oldValue: String!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type OracleMemberVotedSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  vote: OracleAggregatorReportVariantVote!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ReportProcessedSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  report: Report!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}


type ChangedPoolParameterSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  parameter: String!
  newValue: String!
  oldValue: String!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ChangedOracleAggregatorParameterSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  parameter: String!
  newValue: String!
  oldValue: String!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ChangedCoverageRecipientParameterSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  parameter: String!
  newValue: String!
  oldValue: String!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type CoverageRecipientUpdatedEthSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  delta: BigInt!
  total: BigInt!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type CoverageRecipientUpdatedSharesSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  delta: BigInt!
  total: BigInt!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type PoolDepositSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  amountEth: BigInt!
  amountShares: BigInt!
  depositor: PoolDepositor!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type PoolValidatorPurchaseSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool #!
  withdrawalRecipient: vWithdrawalRecipient
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  validatorCount: BigInt!
  validators: [PoolPurchasedValidator!]!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type NewExitQueueTicketSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient 
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  owner: Bytes!
  size: BigInt!
  maxExitable: BigInt!
  ticket: Ticket!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type NewExitQueueCaskSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient 
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  size: BigInt!
  value: BigInt!
  cask: Cask!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ClaimedExitQueueTicketSystemEvent implements SystemEvent @entity {
  id: String!
  index: BigInt!
  type: String!

  tx: Bytes!
  who: Bytes!

  factory: vFactory
  treasury: vTreasury
  pool: vPool
  withdrawalRecipient: vWithdrawalRecipient 
  execLayerRecipient: vExecLayerRecipient
  coverageRecipient: vCoverageRecipient
  oracleAggregator: vOracleAggregator
  exitQueue: vExitQueue

  ticket: Ticket!
  remainingAmount: BigInt!
  remainingEthAmount: BigInt!
  claimedAmount: BigInt!
  receivedEth: BigInt!
  usedCaskCount: BigInt!
  usedCasks: [Cask!]!

  createdAt: BigInt!
  createdAtBlock: BigInt!
}
