type Fix @entity {
  id: String!
  address: Bytes!

  globalFix: PluggableHatcher
  index: BigInt
  deleted: Boolean

  fix: Cub
  
  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type Cub @entity {
  id: Bytes!
  address: Bytes!
  paused: Boolean!
  hatcher: PluggableHatcher!
  constructionData: Bytes!
  progress: BigInt!
  appliedFixes: [Fix!]! @derivedFrom(field: "fix")

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PluggableHatcherImplementation @entity {
  id: String!
  address: Bytes!
  pluggableHatcher: PluggableHatcher!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PluggableHatcher @entity {
  id: Bytes!
  address: Bytes!
  admin: Bytes!
  
  upgradeCount: BigInt!
  implementations: [PluggableHatcherImplementation!]! @derivedFrom(field: "pluggableHatcher")
  currentImplementation: PluggableHatcherImplementation
  hatcherRegistry: Nexus

  initialProgress: BigInt!
  globalFixesCount: BigInt!
  globalFixes: [Fix!]! @derivedFrom(field: "globalFix")

  cubCount: BigInt!
  cubs: [Cub!]! @derivedFrom(field: "hatcher")
  globalPaused: Boolean!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type Nexus @entity {
  id: Bytes!
  address: Bytes!
  factories: [vFactory!]! @derivedFrom(field: "nexus")
  hatchers: [PluggableHatcher!]! @derivedFrom(field: "hatcherRegistry")

  globalOracle: Bytes!
  globalRecipient: Bytes!
  depositContract: Bytes!
  minimalRecipientImplementation: Bytes!

  genesisTimestamp: BigInt!
  epochsUntilFinal: BigInt!
  slotsPerEpoch: BigInt!
  secondsPerSlot: BigInt!

  factoryHatcher: PluggableHatcher
  treasuryHatcher: PluggableHatcher
  poolHatcher: PluggableHatcher
  withdrawalRecipientHatcher: PluggableHatcher
  execLayerRecipientHatcher: PluggableHatcher
  coverageRecipientHatcher: PluggableHatcher
  oracleAggregatorHatcher: PluggableHatcher

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vFactory @entity {
  id: Bytes!
  address: Bytes!
  cub: Cub!
  version: BigInt!
  withdrawalChannels: [WithdrawalChannel!]! @derivedFrom(field: "factory")
  depositors: [FactoryDepositor!]! @derivedFrom(field: "factory")
  pools: [vPool!]! @derivedFrom(field: "factory")
  
  operator: Bytes
  admin: Bytes

  nexus: Nexus
  minimalRecipientImplementation: Bytes
  treasury: vTreasury

  operatorName: String!
  operatorUrl: String!
  operatorIconUrl: String!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vTreasury @entity {
  id: Bytes!
  address: Bytes!
  cub: Cub!
  factory: vFactory!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vPool @entity {
  id: Bytes!
  address: Bytes!
  cub: Cub!
  factory: vFactory!
  nexus: Nexus!
  depositors: [PoolDepositor!]! @derivedFrom(field: "pool")
  balances: [PoolBalance!]! @derivedFrom(field: "pool")
  purchasedValidators: [PoolPurchasedValidator!]! @derivedFrom(field: "pool")
  revenueUpdates: [RevenueUpdate!]! @derivedFrom(field: "pool")
  purchasedValidatorCount: BigInt!
  totalSupply: BigInt!
  totalUnderlyingSupply: BigInt!

  oracleAggregator: vOracleAggregator!
  coverageRecipient: vCoverageRecipient!
  execLayerRecipient: vExecLayerRecipient!
  withdrawalRecipient: vWithdrawalRecipient!
  
  operatorFee: BigInt!
  epochsPerFrame: BigInt!
  maxAPRUpperBound: BigInt!
  maxAPRUpperCoverageBoost: BigInt!
  maxRelativeLowerBound: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vExecLayerRecipient @entity {
  id: Bytes!
  address: Bytes!
  cub: Cub!
  pool: vPool!
  totalSuppliedEther: BigInt!
  suppliedEther: [ExecLayerSuppliedEther!]! @derivedFrom(field: "execLayerRecipient")
  
  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vCoverageRecipient @entity {
  id: Bytes!
  address: Bytes!
  cub: Cub!
  pool: vPool!
  donators: [CoverageDonator!]! @derivedFrom(field: "coverageRecipient")
  totalAvailableEther: BigInt!
  totalSuppliedEther: BigInt!
  suppliedEther: [CoverageSuppliedEther!]! @derivedFrom(field: "coverageRecipient")
  totalAvailableShares: BigInt!
  totalVoidedShares: BigInt!
  voidedShares: [CoverageVoidedShares!]! @derivedFrom(field: "coverageRecipient")
  
  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type vWithdrawalRecipient @entity {
  id: Bytes!
  address: Bytes!
  cub: Cub!
  pool: vPool!
  withdrawalCredentials: Bytes!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type OracleAggregatorMember @entity {
  id: String!
  address: Bytes!
  oracleAggregator: vOracleAggregator!
  index: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!

}

type vOracleAggregator @entity {
  id: Bytes!
  address: Bytes!
  cub: Cub!
  pool: vPool!
  memberCount: BigInt!
  members: [OracleAggregatorMember!]! @derivedFrom(field: "oracleAggregator")

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type CoverageDonator @entity {
  id: String! 
  coverageRecipient: vCoverageRecipient!
  address: Bytes!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type CoverageSuppliedEther @entity {
  id: String!
  amount: BigInt!
  coverageRecipient: vCoverageRecipient!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type CoverageVoidedShares @entity {
  id: String!
  amount: BigInt!
  coverageRecipient: vCoverageRecipient!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PoolBalanceApproval @entity {
  id: String!
  address: Bytes!
  amount: BigInt!

  balance: PoolBalance!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PoolBalance @entity {
  id: String!
  address: Bytes!
  amount: BigInt!
  approvals: [PoolBalanceApproval!]! @derivedFrom(field: "balance")
  totalApproval: BigInt!

  pool: vPool!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PoolPurchasedValidator @entity {
  id: String!
  pool: vPool!
  fundedValidationKey: FundedValidationKey!
  index: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type RevenueUpdate @entity {
  id: String!
  pool: vPool!
  epoch: BigInt!
  delta: BigInt!
  covered: BigInt!
  totalSupply: BigInt!
  totalUnderlyingSupply: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type PoolDepositor @entity {
  id: String! 
  pool: vPool!
  address: Bytes!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ExecLayerSuppliedEther @entity {
  id: String!
  amount: BigInt!
  execLayerRecipient: vExecLayerRecipient!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type FactoryDepositor @entity {
  id: String! 
  factory: vFactory!
  address: Bytes!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ValidatorRequest @entity {
  id: String!
  withdrawalChannel: WithdrawalChannel!
  requestedTotal: BigInt!
  totalOnRequest: BigInt!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type WithdrawalChannel @entity {
  id: String!
  factory: vFactory!
  withdrawalChannel: Bytes!
  lastValidatorRequest: ValidatorRequest

  total: BigInt!
  funded: BigInt!
  limit: BigInt!

  keys: [ValidationKey!]! @derivedFrom(field: "withdrawalChannel")

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ValidationKey @entity {
  id: String!
  publicKey: Bytes!
  signature: Bytes!
  withdrawalChannel: WithdrawalChannel!
  index: BigInt!
  funded: FundedValidationKey

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type ExitRequest @entity {
  id: String!
  validator: FundedValidationKey!
  emitter: Bytes!

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}

type FundedValidationKey @entity {
  id: String!
  validatorId: BigInt!
  validationKey: ValidationKey!
  owner: Bytes
  feeRecipient: Bytes
  lastExitRequest: ExitRequest

  createdAt: BigInt!
  editedAt: BigInt!

  createdAtBlock: BigInt!
  editedAtBlock: BigInt!
}
