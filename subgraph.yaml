specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: NexusV1
    network: goerli
    source:
      address: "0xda4f98eb24b8491fae974487aa4bd8804e0aed96"
      abi: NexusV1
      startBlock: 8732600
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - vFactory
        - vTreasury
      abis:
        - name: NexusV1
          file: ./abis/NexusV1.json
      eventHandlers:
        - event: SpawnedFactory(indexed address,address)
          handler: handleSpawnedFactory
        - event: SpawnedPool(indexed address,address,address,address,address,address,address)
          handler: handleSpawnedPool
        - event: Initialized(uint256,bytes)
          handler: handleInitialized
        - event: SetPluggableHatcher(indexed address,bool)
          handler: handleSetPluggableHatcher
        - event: SetCoreHatchers(address,address,address,address,address,address,address,address)
          handler: handleSetCoreHatchers
        - event: SetGlobalRecipient(address)
          handler: handleSetGlobalRecipient
        - event: SetGlobalOracle(address)
          handler: handleSetGlobalOracle
        - event: SetMinimalRecipientImplementation(address)
          handler: handleSetMinimalRecipientImplementation
        - event: SetDepositContract(address)
          handler: handleSetDepositContract
        - event: SetGlobalConsensusLayerSpec(uint64,uint64,uint64,uint64)
          handler: handlerSetGlobalConsensusLayerSpec
        - event: SetAdmin(address)
          handler: handleSetAdmin
      file: ./src/NexusV1.mapping.ts

  - kind: ethereum
    name: FactoryHatcher
    network: goerli
    source:
      address: "0x07C70229d2915497F1b989a66b5C7ba3949CDE9e"
      abi: PluggableHatcher
      startBlock: 8732600
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - vFactory
        - vTreasury
      abis:
        - name: PluggableHatcher
          file: ./abis/PluggableHatcher.json
      eventHandlers:
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: Hatched(indexed address,bytes)
          handler: handleHatched
        - event: Pause(address)
          handler: handlePause
        - event: Unpause(address)
          handler: handleUnpause
        - event: GlobalPause()
          handler: handleGlobalPause
        - event: GlobalUnpause()
          handler: handleGlobalUnpause
        - event: SetAdmin(address)
          handler: handleSetAdmin
        - event: SetInitialProgress(uint256)
          handler: handleSetInitialProgress
        - event: RegisteredGlobalFix(address,uint256)
          handler: handleRegisteredGlobalFix
        - event: DeletedGlobalFix(uint256)
          handler: handleDeletedGlobalFix
        - event: AppliedFix(address,address)
          handler: handleAppliedFix
      file: ./src/PluggableHatcher.mapping.ts
  - kind: ethereum
    name: TreasuryHatcher
    network: goerli
    source:
      address: "0x39648ADB0EcBD5c4A6146706f7493CB8C94Bd986"
      abi: PluggableHatcher
      startBlock: 8732600
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - vFactory
        - vTreasury
      abis:
        - name: PluggableHatcher
          file: ./abis/PluggableHatcher.json
      eventHandlers:
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: Hatched(indexed address,bytes)
          handler: handleHatched
        - event: Pause(address)
          handler: handlePause
        - event: Unpause(address)
          handler: handleUnpause
        - event: GlobalPause()
          handler: handleGlobalPause
        - event: GlobalUnpause()
          handler: handleGlobalUnpause
        - event: SetAdmin(address)
          handler: handleSetAdmin
        - event: SetInitialProgress(uint256)
          handler: handleSetInitialProgress
        - event: RegisteredGlobalFix(address,uint256)
          handler: handleRegisteredGlobalFix
        - event: DeletedGlobalFix(uint256)
          handler: handleDeletedGlobalFix
        - event: AppliedFix(address,address)
          handler: handleAppliedFix
      file: ./src/PluggableHatcher.mapping.ts
  - kind: ethereum
    name: PoolHatcher
    network: goerli
    source:
      address: "0x1343cBc0d14d738690FB9573251D5cC6A3AF23C0"
      abi: PluggableHatcher
      startBlock: 8732600
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - vFactory
        - vTreasury
      abis:
        - name: PluggableHatcher
          file: ./abis/PluggableHatcher.json
      eventHandlers:
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: Hatched(indexed address,bytes)
          handler: handleHatched
        - event: Pause(address)
          handler: handlePause
        - event: Unpause(address)
          handler: handleUnpause
        - event: GlobalPause()
          handler: handleGlobalPause
        - event: GlobalUnpause()
          handler: handleGlobalUnpause
        - event: SetAdmin(address)
          handler: handleSetAdmin
        - event: SetInitialProgress(uint256)
          handler: handleSetInitialProgress
        - event: RegisteredGlobalFix(address,uint256)
          handler: handleRegisteredGlobalFix
        - event: DeletedGlobalFix(uint256)
          handler: handleDeletedGlobalFix
        - event: AppliedFix(address,address)
          handler: handleAppliedFix
      file: ./src/PluggableHatcher.mapping.ts
  - kind: ethereum
    name: WithdrawalRecipientHatcher
    network: goerli
    source:
      address: "0xf3f5730A18fca1d521Dc3F2B413Ba379ef4F0352"
      abi: PluggableHatcher
      startBlock: 8732600
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - vFactory
        - vTreasury
      abis:
        - name: PluggableHatcher
          file: ./abis/PluggableHatcher.json
      eventHandlers:
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: Hatched(indexed address,bytes)
          handler: handleHatched
        - event: Pause(address)
          handler: handlePause
        - event: Unpause(address)
          handler: handleUnpause
        - event: GlobalPause()
          handler: handleGlobalPause
        - event: GlobalUnpause()
          handler: handleGlobalUnpause
        - event: SetAdmin(address)
          handler: handleSetAdmin
        - event: SetInitialProgress(uint256)
          handler: handleSetInitialProgress
        - event: RegisteredGlobalFix(address,uint256)
          handler: handleRegisteredGlobalFix
        - event: DeletedGlobalFix(uint256)
          handler: handleDeletedGlobalFix
        - event: AppliedFix(address,address)
          handler: handleAppliedFix
      file: ./src/PluggableHatcher.mapping.ts
  - kind: ethereum
    name: ExecLayerRecipientHatcher
    network: goerli
    source:
      address: "0xB7bc23606E9aA7FA1ee9c59485e8051b60a79b21"
      abi: PluggableHatcher
      startBlock: 8732600
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - vFactory
        - vTreasury
      abis:
        - name: PluggableHatcher
          file: ./abis/PluggableHatcher.json
      eventHandlers:
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: Hatched(indexed address,bytes)
          handler: handleHatched
        - event: Pause(address)
          handler: handlePause
        - event: Unpause(address)
          handler: handleUnpause
        - event: GlobalPause()
          handler: handleGlobalPause
        - event: GlobalUnpause()
          handler: handleGlobalUnpause
        - event: SetAdmin(address)
          handler: handleSetAdmin
        - event: SetInitialProgress(uint256)
          handler: handleSetInitialProgress
        - event: RegisteredGlobalFix(address,uint256)
          handler: handleRegisteredGlobalFix
        - event: DeletedGlobalFix(uint256)
          handler: handleDeletedGlobalFix
        - event: AppliedFix(address,address)
          handler: handleAppliedFix
      file: ./src/PluggableHatcher.mapping.ts
  - kind: ethereum
    name: CoverageRecipientHatcher
    network: goerli
    source:
      address: "0x69949b545749b12dB29D357f465058A728c5fFe3"
      abi: PluggableHatcher
      startBlock: 8732600
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - vFactory
        - vTreasury
      abis:
        - name: PluggableHatcher
          file: ./abis/PluggableHatcher.json
      eventHandlers:
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: Hatched(indexed address,bytes)
          handler: handleHatched
        - event: Pause(address)
          handler: handlePause
        - event: Unpause(address)
          handler: handleUnpause
        - event: GlobalPause()
          handler: handleGlobalPause
        - event: GlobalUnpause()
          handler: handleGlobalUnpause
        - event: SetAdmin(address)
          handler: handleSetAdmin
        - event: SetInitialProgress(uint256)
          handler: handleSetInitialProgress
        - event: RegisteredGlobalFix(address,uint256)
          handler: handleRegisteredGlobalFix
        - event: DeletedGlobalFix(uint256)
          handler: handleDeletedGlobalFix
        - event: AppliedFix(address,address)
          handler: handleAppliedFix
      file: ./src/PluggableHatcher.mapping.ts
  - kind: ethereum
    name: OracleAggregatorHatcher
    network: goerli
    source:
      address: "0x4C59E2356cD08e3b731e02Dc9b3Edd4a675e7A81"
      abi: PluggableHatcher
      startBlock: 8732600
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - vFactory
        - vTreasury
      abis:
        - name: PluggableHatcher
          file: ./abis/PluggableHatcher.json
      eventHandlers:
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: Hatched(indexed address,bytes)
          handler: handleHatched
        - event: Pause(address)
          handler: handlePause
        - event: Unpause(address)
          handler: handleUnpause
        - event: GlobalPause()
          handler: handleGlobalPause
        - event: GlobalUnpause()
          handler: handleGlobalUnpause
        - event: SetAdmin(address)
          handler: handleSetAdmin
        - event: SetInitialProgress(uint256)
          handler: handleSetInitialProgress
        - event: RegisteredGlobalFix(address,uint256)
          handler: handleRegisteredGlobalFix
        - event: DeletedGlobalFix(uint256)
          handler: handleDeletedGlobalFix
        - event: AppliedFix(address,address)
          handler: handleAppliedFix
      file: ./src/PluggableHatcher.mapping.ts
  
  # - kind: ethereum
  #   name: IntegrationRouter
  #   network: goerli
  #   source:
  #     address: "0x3D5628b1431706201C39c3E821646952992eE205"
  #     abi: IntegrationRouterV1
  #     startBlock: 8409500
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - IntegrationChannel
  #     abis:
  #       - name: IntegrationRouterV1
  #         file: ./abis/IntegrationRouterV1.json
  #     eventHandlers:
  #       - event: ChannelImplementationUpdated(indexed bytes32,address)
  #         handler: handleChannelImplementationUpdated
  #       - event: ProxyFactoryDeployed(indexed bytes32,address)
  #         handler: handleProxyFactoryDeployed
  #     file: ./src/IntegrationRouterV1.mapping.ts

templates:
  - name: Cub
    kind: ethereum/contract
    network: goerli
    source:
      abi: Cub
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/Cub.mapping.ts
      entities:
        - Cub
      abis:
        - name: Cub
          file: ./abis/Cub.json
      eventHandlers:
        - event: AppliedFixes(address[])
          handler: handleAppliedFixes
  - name: vFactory
    kind: ethereum/contract
    network: goerli
    source:
      abi: vFactoryV1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/vFactoryV1.mapping.ts
      entities:
        - vFactory
      abis:
        - name: vFactoryV1
          file: ./abis/vFactoryV1.json
      eventHandlers:
        - event: AddedValidators(indexed bytes32,bytes)
          handler: handleAddedValidators
        - event: RemovedValidator(indexed bytes32,bytes,uint256)
          handler: handleRemovedValidator
        - event: UpdatedLimit(indexed bytes32,uint256)
          handler: handleUpdatedLimit
        - event: FundedValidator(indexed bytes32,bytes,uint256,uint256)
          handler: handleFundedValidator
        - event: ExitValidator(indexed uint256)
          handler: handleExitValidator
        - event: ValidatorRequest(indexed bytes32,uint256)
          handler: handleValidatorRequest
        - event: SetValidatorOwner(indexed uint256,address)
          handler: handleSetValidatorOwner
        - event: SetValidatorFeeRecipient(indexed uint256,address)
          handler: handleSetValidatorFeeRecipient
        - event: SetValidatorExtraData(indexed uint256,string)
          handler: handleSetValidatorExtraData
        # @TODO OPERATOR NAME
        # - event: SetMetadata(string,string,string)
        #   handler: handleSetMetadata
        - event: SetAdmin(address)
          handler: handleSetAdmin
        - event: ChangedOperator(address)
          handler: handleChangedOperator
        - event: ChangedTreasury(address)
          handler: handleChangedTreasury
        - event: SetMinimalRecipientImplementation(address)
          handler: handleSetMinimalRecipientImplementation
        - event: SetHatcherRegistry(address)
          handler: handleSetHatcherRegistry
        - event: ApproveDepositor(address,bool)
          handler: handleApproveDepositor

  - name: vPool
    kind: ethereum/contract
    network: goerli
    source:
      abi: vPoolV1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/vPoolV1.mapping.ts
      entities:
        - vPool
      abis:
        - name: vPoolV1
          file: ./abis/vPoolV1.json
      eventHandlers:
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        - event: Mint(indexed address,uint256,uint256)
          handler: handleMint
        - event: Burn(address,uint256,uint256)
          handler: handleBurn
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: PurchasedValidators(uint256[])
          handler: handlePurchasedValidators
        - event: SetReportBounds(uint64,uint64,uint64)
          handler: handleSetReportBounds
        - event: SetEpochsPerFrame(uint256)
          handler: handleSetEpochsPerFrame
        - event: SetOperatorFee(uint256)
          handler: handleSetOperatorFee
        - event: SetWithdrawalRecipient(address)
          handler: handleSetWithdrawalRecipient
        - event: SetExecLayerRecipient(address)
          handler: handleSetExecLayerRecipient
        - event: SetCoverageRecipient(address)
          handler: handleSetCoverageRecipient
        - event: SetOracleAggregator(address)
          handler: handleSetOracleAggregator
        - event: ApproveDepositor(address,bool)
          handler: handleApproveDepositor
        - event: ProcessedReport(indexed uint256,(uint128,uint128,uint128,uint128,uint128,uint128,int256,uint64,uint32,uint32),(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,int256,uint256,uint256,uint256,uint256))
          handler: handleProcessedReport
        - event: SetCommittedEthers(uint256)
          handler: handleSetCommittedEthers
        - event: SetDepositedEthers(uint256)
          handler: handleSetDepositedEthers


  - name: vExecLayerRecipient
    kind: ethereum/contract
    network: goerli
    source:
      abi: vExecLayerRecipientV1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/vExecLayerRecipientV1.mapping.ts
      entities:
        - vExecLayerRecipient
      abis:
        - name: vExecLayerRecipientV1
          file: ./abis/vExecLayerRecipientV1.json
      eventHandlers:
        - event: SuppliedEther(uint256)
          handler: handleSuppliedEther

  - name: vCoverageRecipient
    kind: ethereum/contract
    network: goerli
    source:
      abi: vCoverageRecipientV1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/vCoverageRecipientV1.mapping.ts
      entities:
        - vCoverageRecipient
      abis:
        - name: vCoverageRecipientV1
          file: ./abis/vCoverageRecipientV1.json
      eventHandlers:
        - event: SuppliedEther(uint256)
          handler: handleSuppliedEther
        - event: VoidedShares(uint256)
          handler: handleVoidedShares
        - event: UpdatedEtherForCoverage(uint256)
          handler: handleUpdatedEtherForCoverage
        - event: UpdatedSharesForCoverage(uint256)
          handler: handleUpdatedSharesForCoverage
        - event: UpdatedSharesForCoverage(uint256)
          handler: handleUpdatedSharesForCoverage
        - event: AllowedDonor(address,bool)
          handler: handleAllowedDonor

  - name: vOracleAggregator
    kind: ethereum/contract
    network: goerli
    source:
      abi: vOracleAggregatorV1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/vOracleAggregatorV1.mapping.ts
      entities:
        - vOracleAggregator
      abis:
        - name: vOracleAggregatorV1
          file: ./abis/vOracleAggregatorV1.json
      eventHandlers:
        - event: AddedOracleAggregatorMember(address)
          handler: handleAddedOracleAggregatorMember
        - event: RemovedOracleAggregatorMember(address)
          handler: handleRemovedOracleAggregatorMember
        - event: MemberVoted(indexed address,indexed bytes32,(uint128,uint128,uint128,uint128,uint128,uint128,int256,uint64,uint32,uint32))
          handler: handleMemberVoted
        - event: GlobalMemberVoted(indexed address,indexed bytes32,(uint128,uint128,uint128,uint128,uint128,uint128,int256,uint64,uint32,uint32))
          handler: handlerGlobalMemberVoted
        - event: SubmittedReport((uint128,uint128,uint128,uint128,uint128,uint128,int256,uint64,uint32,uint32),bytes32,uint256,uint256)
          handler: handleSubmittedReport
        - event: SetHighestReportedEpoch(uint256)
          handler: handleSetHighestReportedEpoch

  - name: vStakes
    kind: ethereum/contract
    network: goerli
    source:
      abi: vStakesV1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/vStakesV1.mapping.ts
      entities:
        - vStake
        - OperatorCommission
        - vStakesDeposit
        - vStakesBalance
      abis:
        - name: vStakesV1
          file: ./abis/vStakesV1.json
      eventHandlers:
        - event: SetPool(address)
          handler: handleSetPool
        - event: SetName(string)
          handler: handleSetName
        - event: SetSymbol(string)
          handler: handleSetSymbol
        - event: SetIntegratorFee(uint256)
          handler: handleSetIntegratorFee
        - event: NewCommissionSplit(address[],uint256[])
          handler: handleNewCommissionSplit
        - event: CommissionWithdrawn(indexed address,uint256)
          handler: handleNewCommissionWithdrawn
        - event: Stake(indexed address,uint256,uint256)
          handler: handleStake
        - event: VPoolSharesReceived(address,uint256)
          handler: handleVPoolSharesReceived
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  - kind: ethereum
    name: ProxyFactory
    network: goerli
    source:
      abi: ProxyFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - vStake
      abis:
        - name: ProxyFactory
          file: ./abis/ProxyFactory.json
      eventHandlers:
        - event: DeployedProxy(bytes32,address,address,bytes,address)
          handler: handleDeployedProxy
      file: ./src/ProxyFactory.mapping.ts
        

